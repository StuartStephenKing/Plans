#region Prolog
vNow           = TIMST (NOW(), '\Y-\m-\d \h:\i:\s' );
vUser = TM1User();
vPlanCubeName = '}Plans_' | pPlan | '_State';
vPlanControlCube = '}Plans_Control';
vPlanCubesCube = '}Plans_Cubes';

vApprovalDimension = CellGetS( vPlanControlCube, pPlan, 'Dimension' );
vApprovalHierarchy = CellGetS( vPlanControlCube, pPlan, 'Hierarchy' );
vApprovalSubset = CellGetS( vPlanControlCube, pPlan, 'Subset' );
vSecurity = CellGetS( vPlanControlCube, pPlan, 'Security' );
vControlDimension = CellGetS( vPlanControlCube, pPlan, 'Control Dimension' );
vControlHierarchy = CellGetS( vPlanControlCube, pPlan, 'Control Hierarchy' );
vControlMember = CellGetS( vPlanControlCube, pPlan, 'Control Member' );

vValidControl = 0;
IF ( DimensionExists( vControlDimension ) = 1);
    IF ( HierarchyExists( vControlDimension, vControlHierarchy ) = 1);
        IF ( HierarchyElementExists( vControlDimension, vControlHierarchy, vControlMember ) = 1);
            vValidControl = 1;
        ENDIF;
    ENDIF;
ENDIF;

vCubeIndex = 1;
vCube = DIMNM( '}Cubes', vCubeIndex );
WHILE ( vCube @<> '');
    IF ( CELLGETN ( vPlanCubesCube, vCube, pPlan ) = 1);
        # Set order of parameter values for the SecurityOverlayGlobalLockCell TI function to match the dimension order in the cube
        vElementIndex = 1;        
        vDimensionElement = DIMNM( vApprovalDimension, vElementIndex );
        WHILE ( vDimensionElement @<> '' );
            
            # vContributorIndex = 1;
            # vContributorUser = DIMNM( '}Clients', vContributorIndex );
            # WHILE ( vContributorUser @<> '' );
            #     IF ( CellGetS( vPlanCubeName, vDimensionElement, vContributorUser, 'Contributor group' ) @<> '' );
            #         CellPutS( NumberToString( pLock ), vPlanCubeName, vDimensionElement, vContributorUser, 'Lock' );
            #     ENDIF;
            #     vContributorIndex = vContributorIndex + 1;
            #     vContributorUser = DIMNM( '}Clients', vContributorIndex );
            # END;

            vOverlayMap = '';
            vCubeDimOrderIndex = 1;
            vCubeDimOrder = TABDIM(vCube, vCubeDimOrderIndex );
            WHILE ( vCubeDimOrder @<> '' );
                IF ( vCubeDimOrder @= vApprovalDimension );
                    IF ( vOverlayMap @<> '' );
                        vOverlayMap = vOverlayMap | ' | ';
                    ENDIF;
                    vOverlayMap = vOverlayMap | vDimensionElement;
                ELSEIF ( vCubeDimOrder @= vControlDimension & vValidControl = 1 );
                    IF ( vOverlayMap @<> '' );
                        vOverlayMap = vOverlayMap | ' | ';
                    ENDIF;
                    vOverlayMap = vOverlayMap | vControlMember;
                ENDIF;
                vCubeDimOrderIndex = vCubeDimOrderIndex + 1;
                vCubeDimOrder = TABDIM(vCube, vCubeDimOrderIndex );
            END;
            SecurityOverlayGlobalLockNode ( pLock, vCube, vOverlayMap ); 
            vElementIndex = vElementIndex + 1;       
            vDimensionElement = DIMNM( vApprovalDimension, vElementIndex );
        END;
    ENDIF;
    vCubeIndex = vCubeIndex + 1;
    vCube = DIMNM( '}Cubes', vCubeIndex );
END;


#endregion